// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  walletAddress String       @unique
  referredBy    String?
  referralCode  String       @unique
  xp            Int          @default(0)
  referrals     String[]
  tasks         UserTask[]
  RewardsClaim  UserReward[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model UserTask {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  taskId      String    @db.ObjectId
  task        Task      @relation(fields: [taskId], references: [id])
  completedAt DateTime?
  proof       Json
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Task {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  description String
  expPoints   Int
  type        String
  providerId  String?
  UserTask    UserTask[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model UserReward {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  rewardType  String
  description String
  expPoints   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Reward {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  rewardType  String
  description String
  expPoints   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
